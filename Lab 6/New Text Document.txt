# Kyle Johnson
# ETEC3702 – Concurrency 5:00 PM
# Paul Yost
# 3-24-21
# Lab 6 – Inter-Process Communication with Pipes

import multiprocessing
import time
import random
import os
import sys

def cat(filename,pipeout):
	f = open(os.path.join(sys.path[0], filename), "r")
	lines = f.readlines()
	for line in lines:
		pipeout.send(line)
	pipeout.send("None")
	pipeout.close()
	
def grep(pattern,pipein, pipeout):
	pattern1 = pattern.upper()
	pattern2 = pattern.lower()
	pattern3 = pattern2.capitalize()
	print("pattern1" + pattern1)
	print("pattern2" + pattern2)
	print("pattern3" + pattern3)
	while True:
		data=pipein.recv()
		if data == "None":
			pipeout.send(data)
			pipeout.close()
			break
		if (pattern in data) or (pattern1 in data) or (pattern2 in data) or (pattern3 in data):
			pipeout.send(data)
    
#def wc(pipein,pipeout):
 	#initialize a count variable to zero
	#Loop
	#read a line from pipein
	# if the line read is None then exit the loop
	# otherwise increment the count
	#after the loop, write the count to pipeout as a string: “Lines:”+str(count) 
	#write None to pipeout and terminate
	
def printer(pipein):
	while True:
		data=pipein.recv()
		if (data == "None"):
			break
		print(data)
            
if __name__ == '__main__':
	input("Enter for Program 1: cat “sonnets.txt” | grep “thee” | printer ")
	pipeCon1,pipeCon2=multiprocessing.Pipe()
	pipeCon3,pipeCon4=multiprocessing.Pipe()
	p1=multiprocessing.Process(target=cat,args=("sonnets.txt",pipeCon1,))
	p2=multiprocessing.Process(target=grep,args=("THEE",pipeCon2,pipeCon3,))
	#p3=multiprocessing.Process(target=wc,args=(pipeCon2,pipeCon3,))
	p4=multiprocessing.Process(target=printer,args=(pipeCon4,))
	p1.start()
	p2.start()
	#p3.start()
	p4.start()
	p1.join()
	p2.join()
	#p3.join()
	p4.join()
	input("Enter for Program 2: cat “sonnets.txt” | grep “thee” | wc | printer")

	input("Enter to exit")
